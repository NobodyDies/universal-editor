ul.dnd-list(dnd-list="vm.items" 
    dnd-allowed-types="vm.getAllowedTypes(vm.parentNode, vm.collection)"
    dnd-dragover="vm.dragover(event, index, type)" 
    dnd-drop="vm.drop(item, index, event)"      
    dnd-inserted="vm.inserted(index, external, type)")
        li(data-ng-show="!vm.loaded")
                .column.td-loading
                        .processing-status-wrapper
                            .processing-status {{'PERFORMS_ACTIONS' | translate}}
        li.row-draggable(ng-if="vm.loaded", 
            data-ng-repeat="item in vm.items",
            oncontextmenu='return false;'     
            dnd-disable-if="vm.dragDisable(item, vm.collection)",  
            dnd-draggable="item",
            dnd-moved="vm.moved($index)",
            dnd-type="vm.getType(item, vm.collection)",                 
            dnd-dragstart="vm.dragStart(event, item, $index)"
            dnd-effect-allowed="move",
            data-frame-id="{{item[vm.dataSource.primaryKey]}}")
            .row(data-ng-mousedown="vm.toggleContextViewByEvent({item: item, e: $event})")                
                .table-cell.context-column
                    .context-menu-wrapper(data-ng-show="vm.options.contextId == item[vm.dataSource.primaryKey]" , data-ng-style='vm.options.styleContextMenu')
                                .context-menu-item(data-ng-repeat="link in vm.contextLinks track by $index", data-ng-class="{'component-separator': link.separator}")
                                    component-wrapper(data-setting="link", 
                                                    data-entity-id="{{::item[vm.dataSource.primaryKey]}}", 
                                                    data-button-class="context", 
                                                    data-options="vm.options")
                span.dnd-expand-item.glyphicon(
                     ng-if="vm.treeSource"
                  ng-class="{'glyphicon-collapse-down': item.$isExpand,'glyphicon-expand': (!item.$isExpand || (item[vm.childrenCountField] > 0 && !item[vm.childrenField])), 'icon-collapse': !item[vm.childrenCountField]}" 
                   ng-click="vm.expand(item)")                
                .column(data-ng-repeat="fieldItem in vm.tableFields track by $index" ng-style="fieldItem.ngStyle" )
                    component-wrapper(
                        data-setting="fieldItem.component",
                        data-options="item.$options")
            .children-frames(ng-show="item.$isExpand" ng-if="vm.treeSource" ng-class="{'empty-child-area': item[vm.childrenField]}")
                ue-node(
                    data-collection="vm.collection",
                    data-parent-node="item",
                    data-items="item[vm.childrenField]",
                    data-table-fields="vm.tableFields",
                        data-setting="vm.setting",
                        data-options="vm.options",
                    data-context-links="vm.contextLinks",
                    toggle-context-view-by-event="vm.toggleContextViewByEvent({item: item, e: e})")
